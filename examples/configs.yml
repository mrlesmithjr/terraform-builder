---
# This is an example config layout

# Defines project name which becomes parent root directory
project_name: example

# Define backends
backends:
  local: {}
  remote: {}

# Defines environments
environments:
  development: {}
  production: {}
  staging: {}

# Define global variables
global_variables: {}

# Define modules - Structure will be project_name/modules/{module}
# root needs to always exist
modules:
  root: {}
  network: {}
  services: {}

# Define providers and variables
providers:
  AzureRM:
    variables:
      azurerm_environment:
        type: string
        description: AzureRM Environment
        default: public
      azurerm_features:
        description: Customize the behaviour of certain Azure Provider resources.
        default: {}
      azurerm_subscription_id:
        type: string
        description: AzureRM Subscription ID
        default: ""
      azurerm_tenant_id:
        type: string
        description: AzureRM Tenant ID
        default: ""
  DigitalOcean:
    variables:
      do_api_endpoint:
        type: string
        description: This can be used to override the base URL for DigitalOcean API requests
        default: https://api.digitalocean.com
      do_image:
        type: string
        description: Default DigitalOcean droplet image
        default: ubuntu-18-04-x64
      do_region:
        type: string
        description: DigitalOcean region
        default: nyc1
      do_ssh_keys:
        type: string
        description: DigitalOcean SSH keys to deploy to new droplets
        default: []
      do_token:
        type: string
        description: This is the DO API token
        default: ""
  vSphere:
    variables:
      vsphere_allow_unverified_ssl:
        type: bool
        description: Boolean that can be set to true to disable SSL certificate verification
        default: "false"
      vsphere_compute_cluster:
        type: string
        description: Compute cluster to use by default
        default: ""
      vsphere_datacenter:
        type: string
        description: Datacenter to use by default
        default: ""
      vsphere_network:
        type: string
        description: Network to use by default
        default: ""
      vsphere_password:
        type: string
        description: Password for vSphere API operations
        default: ""
      vsphere_resource_pool:
        type: string
        description: The resource pool to put virtual machine's in
        default: ""
      vsphere_server:
        type: string
        description: vCenter server name for vSphere API operations
        default: ""
      vsphere_username:
        type: string
        description: Username for vSphere API operations
        default: ""

# Define required resources including provider and module
# Resources are defined in an agnostic way to ensure portability
# between providers.
resources:
  projects:
    TerraformCloud:
      description: Terraform Cloud Project
      environment: development
      module: root
      provider: DigitalOcean
      purpose: Terraform Cloud Project
      resources: []
      tags:
        - test
  vms:
    test-do.example.com:
      count: 1
      memory: 1024
      module: root
      num_cpus: 1
      provider: DigitalOcean
      tags:
        - test-digitalocean
    test-vs:
      count: 1
      memory: 2048
      module: root
      num_cpus: 1
      provider: vSphere
      tags:
        - test-vsphere
