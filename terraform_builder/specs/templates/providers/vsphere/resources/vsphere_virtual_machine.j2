{%-  for vm, vm_config in cluster_config.vms.items() %}
{%-    set memory = vm_config.memory|default(1024)|round|int|string %}
{%-    set cpus = (vm_config.num_cpus)|default(1)|string %}
# Resource {{ provider }} virtual machine
resource "vsphere_virtual_machine" "{{ vm.split('.')[0]|replace('-','_') }}" {
  count    = {{ vm_config.count|default(1) }}
  name     = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
  num_cpus = {{ cpus }}
  memory   = {{ memory }}
{%-    if vm_config.datastore and vm_config.datastore in dc_config.datastores %}
  datastore_id = {{ 'data.vsphere_datastore.'+vm_config.datastore|replace('-','_')+'.id' }}
{%-    endif %}
{%-    set dns_servers = [] %}
{%-    for interface in vm_config.network_interfaces %}
{%-      if interface.network in dc_config.networks %}
{%-        set network_id = 'data.vsphere_network.'+interface.network|replace('-','_')|replace('|','_')+'.id' %}
{%-        if interface.address_allocation|lower == 'static' %}
{%-          for dns_server in dc_config.networks[interface.network]['dns_servers'] %}
{%-            set _ = dns_servers.append(dns_server) %}
{%-          endfor %}
{%-        endif %}
{%-      else %}
{%-        set network_id = 'vsphere_host_port_group.'+interface.network|replace('-','_')|replace('|','_')+'.id' %}
{%-      endif %}
  network_interface {
    network_id = {{ network_id }}
  }
{%-    endfor %}
{%-    if cluster_config.create %}
  resource_pool_id = vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-    else %}
  resource_pool_id = data.vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-    endif %}
{%-    if vm_config.template %}
  guest_id         = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.guest_id
  clone {
    template_uuid = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.id
    customize {
{%-      if dns_servers != [] %}
      dns_server_list = {{ dns_servers|replace('\'', '"') }}
{%-      endif %}
{%-      if dc_config.templates[vm_config.template]['os']|lower == 'linux' %}
      linux_options {
        host_name = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
        domain    = var.vsphere_domain
      }
{%-      elif dc_config.templates[vm_config.template]['os']|lower == 'windows' %}
      windows_options {
        computer_name  = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
      }
{%-      endif %}
{%-      for interface in vm_config.network_interfaces %}
{%-        if interface.address_allocation|lower == 'static' %}
{%-          set subnet = dc_config.networks[interface.network]['subnet']+'/'+dc_config.networks[interface.network]['cidr']|string %}
      network_interface {
{%-          if dc_config.networks[interface.network]['start_address'] %}
{%-            set hostnum = dc_config.networks[interface.network]['start_address'].split('.')[3]|int - 1 %}
        ipv4_address = cidrhost("{{ subnet }}", count.index + {{ hostnum }} + {{ networks[interface.network]['addresses'] }} + ((var.environment_index) * {{ vm_config.count }}))
{%-          else %}
        ipv4_address = cidrhost("{{ subnet }}", count.index + {{ networks[interface.network]['addresses'] }} + ((var.environment_index) * {{ vm_config.count }}))
{%-          endif %}
        ipv4_netmask = {{ dc_config.networks[interface.network]['cidr'] }}
      }
      ipv4_gateway = "{{ dc_config.networks[interface.network]['gateway'] }}"
{%-        else %}
      network_interface {}
{%-        endif %}
{%-        set _ = networks[interface.network].update({'addresses': networks[interface.network]['addresses']+(vm_config.count * args.environments|length)}) %}
{%-      endfor %}
    }
  }
{%-      if dc_config.templates[vm_config.template]['controller']|lower == 'sata' %}
  # https://github.com/terraform-providers/terraform-provider-vsphere/issues/523
  disk {
    label            = format("{{ vm.split('.')[0] }}_%02s.vmdk", count.index + 1)
    size             = "1"
    thin_provisioned = "1"
    eagerly_scrub    = "0"
  }
{%-      else %}
  scsi_type        = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.scsi_type
  disk {
    label            = "disk0"
    size             = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.size
    eagerly_scrub    = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.eagerly_scrub
    thin_provisioned = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.thin_provisioned
  }
{%-      endif %}
{%-    endif %}
{%-    if vm_config.tags %}
{%-      set tags = [] %}
{%-      for tag in vm_config.tags %}
{%-        set tag_id = 'vsphere_tag.'+tag|replace('-','_')+'.id' %}
{%-        set _ = tags.append(tag_id) %}
{%-        set tag_id_env = 'vsphere_tag.'+tag|replace('-','_')+'_env.id' %}
{%-        set _ = tags.append(tag_id_env) %}
{%-      endfor %}
{%-      set _ = tags.append('vsphere_tag.environment.id') %}

  tags = {{ tags|replace('\'','') }}
{%-    endif %}
}
{%-  endfor %}
