{%-  for vm, vm_config in cluster_config.vms.items() %}
{%-    set memory = (vm_config.memory|default(1024)/1024)|round|int|string %}
{%-    set cpus = (vm_config.num_cpus)|default(1)|string %}
# Resource {{ provider }} virtual machine
resource "vsphere_virtual_machine" "{{ vm.split('.')[0]|replace('-','_') }}" {
  count            = {{ vm_config.count|default(1) }}
  name             = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
  num_cpus         = {{ cpus }}
  memory           = {{ memory }}
{%-    if cluster_config.create %}
  resource_pool_id = vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-    else %}
  resource_pool_id = data.vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-    endif %}
{%-    if vm_config.template %}
  guest_id         = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.guest_id
  scsi_type        = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.scsi_type
  network_interface {
    network_id   = vsphere_host_port_group.{{ vm_config.network|replace('-','_') }}.id
    adapter_type = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.network_interface_types[0]
  }
  disk {
    label            = "disk0"
    size             = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.size
    eagerly_scrub    = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.eagerly_scrub
    thin_provisioned = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.thin_provisioned
  }
  clone {
    template_uuid = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.id
  }
{%-    else %}
  network_interface {
    network_id = vsphere_host_port_group.{{ vm_config.network|replace('-','_') }}.id
  }
{%-    endif %}
{%-    if vm_config.tags %}
{%-      set tags = [] %}
{%-      for tag in vm_config.tags %}
{%-        set tag = 'vsphere_tag.'+tag|replace('-','_')+'.id' %}
{%-        set _ = tags.append(tag) %}
{%-      endfor %}

  tags = {{ tags|replace('\'','"') }}
{%-    endif %}
}
{%-  endfor %}