# Generated using https://github.com/mrlesmithjr/terraform-builder
{%- for provider, provider_config in args.providers.items() %}
{%-   if provider_config.resources %}
{%-     if provider == 'AzureRM' %}
{%-       if provider_config.resources.resource_groups %}
{%-         for rg, rg_config in provider_config.resources.resource_groups.items() %}
{%-           if rg_config.module == module %}
{%-             if rg_config.create %}
# Resource {{ provider }} resource group
resource "azurerm_resource_group" "{{ rg|replace('-','_') }}" {
  name     = format("{{ rg }}-%s", substr(var.environment, 0, 4))
  location = var.azurerm_location
}
{%-             else %}
# Data {{ provider }} resource group
data "azurerm_resource_group" "{{ rg|replace('-','_') }}" {
  name = "{{ rg }}"
}
{%-             endif %}
{%-             if rg_config.virtual_networks %}
{%-               for net, net_config in rg_config.virtual_networks.items() %}
{%-                 if net_config.create %}
# Resource {{ provider }} virtual network
resource "azurerm_virtual_network" "{{ net|replace('-','_') }}" {
  name                = format("{{ net }}-%s", substr(var.environment, 0, 4))
  address_space       = {{ net_config.address_space|replace('\'','"') }}
  location            = var.azurerm_location
  resource_group_name = azurerm_resource_group.{{ rg|replace('-','_') }}.name
}
{%-                   if net_config.subnets %}
{%-                     for subnet in net_config.subnets %}
# Resource {{ provider }} subnet
resource "azurerm_subnet" "{{ net|replace('-','_')+'_subnet_'+loop.index0|string }}" {
  name                 = format("{{ net+'_subnet_'+loop.index0|string }}-%s", substr(var.environment, 0, 4))
  resource_group_name  = azurerm_resource_group.{{ rg|replace('-','_') }}.name
  virtual_network_name = azurerm_virtual_network.{{ net|replace('-','_') }}.name
  address_prefix       = "{{ subnet }}"
}
{%-                     endfor %}
{%-                   endif %}
{%-                 else %}
# Data {{ provider }} virtual network
data "azurerm_virtual_network" "{{ net|replace('-','_') }}" {
  name = "{{ net }}"
}
{%-                 endif %}
{%-               endfor %}
{%-             endif %}
{%-             if rg_config.vms %}
{%-               for vm, vm_config in rg_config.vms.items() %}
# Resource {{ provider }} network interface
resource "azurerm_network_interface" "{{ vm|replace('-','_') }}" {
  count               = {{ vm_config.count|default(1) }}
  name                = format("{{ vm }}-%02s-nic-%s", count.index + 1, substr(var.environment, 0, 4))
  location            = var.azurerm_location
  resource_group_name = azurerm_resource_group.{{ rg|replace('-','_') }}.name

  ip_configuration {
    name                          = format("{{ vm }}-%02s-ip-config", count.index + 1)
    subnet_id                     = azurerm_subnet.{{ vm_config.network|replace('-','_')+'_subnet_'+rg_config.virtual_networks[vm_config.network].subnets.index(vm_config.subnet)|string }}.id
    private_ip_address_allocation = "Dynamic"
  }
}
{%-                 set memory = (vm_config.memory|default(1024)/1024)|round|int|string %}
{%-                 set cpus = (vm_config.num_cpus)|default(1)|string %}
{%-                 if cpus|int < 2 and memory|int < 7 %}
{%-                   set vm_size = 'Standard_DS1_v2' %}
{%-                 elif cpus|int < 4 and memory|int < 14 %}
{%-                   set vm_size = 'Standard_DS2_v2' %}
{%-                 elif cpus|int < 8 and memory|int < 28 %}
{%-                   set vm_size = 'Standard_DS3_v2' %}
{%-                 elif cpus|int < 16 and memory|int < 56 %}
{%-                   set vm_size = 'Standard_DS4_v2' %}
{%-                 elif cpus|int >= 16 and memory|int >= 56 %}
{%-                   set vm_size = 'Standard_DS5_v2' %}
{%-                 else %}
{%-                   set vm_size = 'Standard_DS1_v2' %}
{%-                 endif %}
# Resource {{ provider }} virtual machine
resource "azurerm_virtual_machine" "{{ vm.split('.')[0]|replace('-','_') }}" {
  count                 = {{ vm_config.count|default(1) }}
  name                  = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
  vm_size               = "{{ vm_size }}"
  location              = var.azurerm_location
  resource_group_name   = azurerm_resource_group.{{ rg|replace('-','_') }}.name
  network_interface_ids = [azurerm_network_interface.{{ vm|replace('-','_') }}[count.index].id]

  storage_image_reference {
    publisher = lookup(var.azurerm_image_reference.{{ vm_config.image }}, "publisher")
    offer     = lookup(var.azurerm_image_reference.{{ vm_config.image }}, "offer")
    sku       = lookup(var.azurerm_image_reference.{{ vm_config.image }}, "sku")
    version   = lookup(var.azurerm_image_reference.{{ vm_config.image }}, "version")
  }
  storage_os_disk {
    name              = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
    caching           = "ReadWrite"
    create_option     = "FromImage"
    managed_disk_type = "Standard_LRS"
  }
{%-                 if vm_config.tags %}
  tags = {{ vm_config.tags|replace('\'','"') }}
{%-                 endif %}
}
{%-               endfor %}
{%-             endif %}
{%-           endif %}
{%-         endfor %}
{%-       endif %}
{%-     elif provider == 'vSphere' %}
{%-       if provider_config.resources.datacenters %}
{%-         for dc, dc_config in provider_config.resources.datacenters.items() %}
{%-           if dc_config.module == module %}
{%-             if dc_config.create %}
# Resource {{ provider }} datacenter
resource "vsphere_datacenter" "{{ dc|replace('-','_') }}" {
  name = "{{ dc }}"
}
{%-             else %}
# Data {{ provider }} datacenter
data "vsphere_datacenter" "{{ dc|replace('-','_') }}" {
  name = "{{ dc }}"
}
{%-             endif %}
{%-             if dc_config.templates %}
{%-               for template in dc_config.templates %}
# Data {{ provider }} virtual machine template
data "vsphere_virtual_machine" "{{ template|replace('-','_') }}" {
  name          = "{{ template }}"
{%-                 if dc_config.create %}
  datacenter_id = vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                 else %}
  datacenter_id = data.vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                 endif %}
}
{%-               endfor %}
{%-             endif %}
{%-             if dc_config.clusters %}
{%-               for cluster, cluster_config in dc_config.clusters.items() %}
{%-                 if cluster_config.create %}
# Resource {{ provider }} compute cluster
resource "vsphere_compute_cluster" "{{ cluster|replace('-','_') }}" {
  name          = "{{ cluster }}"
{%-                   if dc_config.create %}
  datacenter_id = vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                   else %}
  datacenter_id = data.vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                   endif %}
  # host_system_ids     = ["${data.vsphere_host.hosts.*.id}"]
  drs_enabled          = {{ cluster_config.drs_enabled|lower }}
  drs_automation_level = "{{ cluster_config.drs_automation_level }}"
  ha_enabled           = {{ cluster_config.ha_enabled|lower }}
}
{%-                 endif %}
{%-                 if cluster_config.hosts %}
{%-                   for host, host_config in cluster_config.hosts.items() %}
{%-                     if host_config.create %}
# Resource {{ provider }} host
resource "vsphere_host" "{{ host|replace('-','_') }}" {
  hostname = "{{ host_config.hostname }}"
  username = var.vsphere_host_username
  password = var.vsphere_host_password
  cluster  = vsphere_compute_cluster.{{ cluster|replace('-','_') }}.id
}
{%-                     else %}
# Data {{ provider }} host
data "vsphere_host" "{{ host|replace('-','_') }}" {
  name          = "{{ host }}"
{%-                       if dc_config.create %}
  datacenter_id = vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                       else %}
  datacenter_id = data.vsphere_datacenter.{{ dc|replace('-','_') }}.id
{%-                       endif %}
}
{%-                     endif %}
{%-                     if dc_config.virtual_switches %}
{%-                       for vs, vs_config in dc_config.virtual_switches.items() %}
{%-                         if vs_config.create %}
{%-                           if vs_config.type == 'host' %}
# Resource {{ provider }} host virtual switch
resource "vsphere_host_virtual_switch" "{{ vs|replace('-','_') }}" {
  name             = "{{ vs }}"
{%-                             if host_config.create %}
  host_system_id   = vsphere_host.{{ host|replace('-','_') }}.id
{%-                             else %}
  host_system_id   = data.vsphere_host.{{ host|replace('-', '_') }}.id
{%-                             endif %}
  network_adapters = {{ vs_config.network_adapters|replace('\'','"') }}
  active_nics      = {{ vs_config.active_nics|replace('\'','"') }}
  standby_nics     = {{ vs_config.standby_nics|replace('\'','"') }}
}
{%-                           endif %}
{%-                           if vs_config.port_groups %}
{%-                             for pg, pg_info in vs_config.port_groups.items() %}
{%-                               if pg_info.create %}
# Resource {{ provider }} host port group
resource "vsphere_host_port_group" "{{ pg|replace('-','_') }}" {
  name                = "{{ pg }}"
{%-                                 if host_config.create %}
  host_system_id      = vsphere_host.{{ host|replace('-','_') }}.id
{%-                                 else %}
  host_system_id      = data.vsphere_host.{{ host|replace('-','_') }}.id
{%-                                 endif %}
{%-                                 if vs_config.create %}
  virtual_switch_name = vsphere_host_virtual_switch.{{ vs|replace('-','_') }}.name
{%-                                 else %}
  virtual_switch_name = data.vsphere_host_virtual_switch.{{ vs|replace('-','_') }}.name
{%-                                 endif %}
}
{%-                               endif %}
{%-                             endfor %}
{%-                           endif %}
{%-                         endif %}
{%-                       endfor %}
{%-                     endif %}
{%-                   endfor %}
{%-                 endif %}
{%-                 if cluster_config.vms %}
{%-                   for vm, vm_config in cluster_config.vms.items() %}
{%-                     set memory = (vm_config.memory|default(1024)/1024)|round|int|string %}
{%-                     set cpus = (vm_config.num_cpus)|default(1)|string %}
# Resource {{ provider }} virtual machine
resource "vsphere_virtual_machine" "{{ vm.split('.')[0]|replace('-','_') }}" {
  count            = {{ vm_config.count|default(1) }}
  name             = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
  num_cpus         = {{ cpus }}
  memory           = {{ memory }}
{%-                     if cluster_config.create %}
  resource_pool_id = vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-                     else %}
  resource_pool_id = data.vsphere_compute_cluster.{{ cluster|replace('-','_') }}.resource_pool_id
{%-                     endif %}
{%-                     if vm_config.template %}
  guest_id         = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.guest_id
  scsi_type        = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.scsi_type
  network_interface {
    network_id   = vsphere_host_port_group.{{ vm_config.network|replace('-','_') }}.id
    adapter_type = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.network_interface_types[0]
  }
  disk {
    label            = "disk0"
    size             = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.size
    eagerly_scrub    = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.eagerly_scrub
    thin_provisioned = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.disks.0.thin_provisioned
  }
  clone {
    template_uuid = data.vsphere_virtual_machine.{{ vm_config.template|replace('-','_') }}.id
  }
{%-                     else %}
  network_interface {
    network_id = vsphere_host_port_group.{{ vm_config.network|replace('-','_') }}.id
  }
{%-                     endif %}
{%-                     if vm_config.tags %}
{%-                       set tags = [] %}
{%-                       for tag in vm_config.tags %}
{%-                         set tag = 'vsphere_tag.'+tag|replace('-','_')+'.id' %}
{%-                         set _ = tags.append(tag) %}
{%-                       endfor %}

  tags = {{ tags|replace('\'','"') }}
{%-                     endif %}
}
{%-                   endfor %}
{%-                 endif %}
{%-               endfor %}
{%-             endif %}
{%-           endif %}
{%-         endfor %}
{%-       endif %}
{%-       if provider_config.resources.tag_categories %}
{%-         for tc, tc_config in provider_config.resources.tag_categories.items() %}
{%-           if tc_config.module == module %}
{%-             if tc_config.create %}
# Resource {{ provider }} tag category
resource "vsphere_tag_category" "{{ tc|replace('-','_') }}" {
  name        = "{{ tc }}"
  description = "Managed by Terraform"
  cardinality = "{{ tc_config.cardinality|upper }}"

  associable_types = {{ tc_config.associable_types|replace('\'','"') }}
}
{%-               if tc_config.tags %}
{%-                 for tag in tc_config.tags %}
# Resource {{ provider }} tag
resource "vsphere_tag" "{{ tag|replace('-','_') }}" {
  name        = "{{ tag }}"
  category_id = vsphere_tag_category.{{ tc|replace('-','_') }}.id
  description = "Managed by Terraform"
}
{%-                 endfor %}
{%-               endif %}
{%-             endif %}
{%-           endif %}
{%-         endfor %}
{%-       endif %}
{%-     endif %}
{%-     if provider_config.resources.vms %}
{%-       set module_vms = [] %}
{%-       for vm, vm_config in provider_config.resources.vms.items() %}
{%-         if vm_config.module == module %}
{%-           set tags = {'digitalocean': [], 'vsphere': []} %}
{%-           set _ = module_vms.append(provider) %}
{%-           set memory = (vm_config.memory|default(1024)/1024)|round|int|string %}
{%-           set cpus = (vm_config.num_cpus)|default(1)|string %}
{%-           if provider == 'DigitalOcean' %}
# Resource {{ provider }} virtual machine
resource "digitalocean_droplet" "{{ vm.split('.')[0]|replace('-','_') }}" {
  count  = {{ vm_config.count|default(1) }}
  name   = format("{{ vm.split('.')[0] }}-%02s-%s", count.index + 1, substr(var.environment, 0, 4))
  image  = "{{ vm_config.image }}"
  region = var.do_region
  size   = "{{ 's-'+cpus+'vcpu-'+memory+'gb' }}"
{%-             if vm_config.tags %}
{%-               set vm_tags = [] %}
{%-               for tag in vm_config.tags %}
{%-                 set tag_id = 'digitalocean_tag.'+tag|replace('-','_')+'.id' %}
{%                  set _ = vm_tags.append(tag_id) %}
{%-                 if tag not in tags.digitalocean %}
{%-                   set _ = tags.digitalocean.append(tag) %}
{%-                 endif %}
{%-               endfor %}
  tags = {{ vm_tags|replace('\'', '') }}
{%-             endif %}
}
{%-           endif %}
{%-           for tag in tags.digitalocean %}
# Resource DigitalOcean tag
resource "digitalocean_tag" "{{ tag|replace('-','_') }}" {
  name = "{{ tag }}"
}
{%-           endfor %}
{%-         endif %}
{%-       endfor %}
{%-     endif %}
{%-   endif %}
{%- endfor %}
